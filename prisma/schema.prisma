// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Cliente {
  cod String @id @default(uuid())
  nome String
  email String
  venda Venda[]

data_criacao DateTime @default(now())
data_uptade DateTime @default(now())
}

model MarcaCategoria{
  cod_marca String
  cod_categoria String

  categoria Categoria @relation(fields: [cod_categoria], references: [cod])
  marca Marca @relation(fields: [cod_marca], references: [cod])

  @@id([cod_marca, cod_categoria])
}

model Marca{
  cod String @id @default(uuid())
  nome String @unique
  produto Produto[]
  marcaCategoria MarcaCategoria[]
}

model Produto{
  cod String @id @default(uuid())
  nome String 
  qt_estoque Int @default(0)
  vl_produto Float @default(0)
  marca Marca @relation(fields: [cod_marca], references: [cod])
  categoria Categoria @relation(fields: [cod_categoria],references: [cod])
  cod_categoria String
  cod_marca String
  itemVenda ItemVenda[]
  itemCompra ItemCompra[]
data_criacao DateTime @default(now())
data_uptade DateTime @default(now())
  
}
model Categoria {
   cod String @id @default(uuid())
  nome String
  produto Produto[]
  marcaCategoria MarcaCategoria[]


  data_criacao DateTime @default(now())
data_uptade DateTime @default(now())
}

model Venda{
cod String @id @default(uuid())
vl_total Float
data_criacao DateTime @default(now())
data_uptade DateTime @default(now())

cliente Cliente @relation(fields: [cod_cliente], references: [cod])

cod_cliente String
itemVenda ItemVenda[]

}

model ItemVenda{
cod String @id @default(uuid())
qt_produto Int
vl_total_item Float?

venda Venda @relation(fields: [cod_venda], references: [cod])
produto Produto @relation(fields: [cod_produto], references: [cod])

cod_venda String
cod_produto String



data_criacao DateTime @default(now())
data_uptade DateTime @default(now())
}
model Funcionario {
  cod String @id @default(uuid())
  nome String
  email String
  senha String
  cargo String 

data_criacao DateTime @default(now())
data_uptade DateTime @default(now())
}
model Fornecedor {
   cod String @id @default(uuid())
  nome String
  email String
  fone String

  compra  Compra[]
  data_criacao DateTime @default(now())
data_uptade DateTime @default(now())
}



model ItemCompra{
cod String @id @default(uuid())
qt_produto Int
vl_total_item Float?

compra Compra @relation(fields: [cod_compra], references: [cod])
produto Produto @relation(fields: [cod_produto], references: [cod])

cod_compra String
cod_produto String



data_criacao DateTime @default(now()) 
data_uptade DateTime @default(now())
}

model Compra{ 
   cod String @id @default(uuid())
  vl_total Float @default(0)
  cod_fornecedor String?
  
  itemCompra ItemCompra[]
  fornecedor Fornecedor? @relation(fields: [cod_fornecedor], references: [cod])

  data_criacao DateTime @default(now())
  data_uptade DateTime @default(now())
}

